- name: Wait 300 seconds for port 22 to become open and contain "OpenSSH"
  wait_for:
    port: 22
    host: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
    search_regex: OpenSSH
    delay: 10
  connection: local

- name: add Kubernetes apt-key
  apt_key:
       url: "{{ item }}"
       state: present
  loop:
    - https://download.docker.com/linux/ubuntu/gpg
    - https://packages.cloud.google.com/apt/doc/apt-key.gpg

- name: add Kubernetes' APT repository
  apt_repository:
      repo: "{{ item.apt_repo }}"
      state: present
      filename: "{{ item.filename }}"
  loop:
    - {"filename": "kubernetes", "apt_repo": "deb http://apt.kubernetes.io/ kubernetes-xenial main"}
    - {"filename": "docker", "apt_repo": "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable" }

- name: Install packages
  apt:
      name:
      - ca-certificates
      - software-properties-common
      - apt-transport-https
      - "docker-ce={{ DOCKER_VERSION }}.*"
      - "kubelet={{ KUBE_VERSION }}.*"
      - "kubeadm={{ KUBE_VERSION }}.*"
      - "kubectl={{ KUBE_VERSION }}.*"
      state: present
      update_cache: yes

- name: "Add sudo user named {{ SUDO_USER }}"
  user:
    name: "{{ SUDO_USER }}"
    shell: /bin/bash
    groups: sudo

# I know, how bad this is.
- name: copy pub ssh key of root to sudo user
  copy:
    src: /root/.ssh
    dest: "/home/{{ SUDO_USER }}/"
    owner: "{{ SUDO_USER }}"
    remote_src: yes

- name: "Allow 'sudo' group to have passwordless sudo"
  lineinfile:
    dest: /etc/sudoers
    state: present
    regexp: '^%sudo'
    line: '%sudo ALL=(ALL) NOPASSWD: ALL'
    validate: 'visudo -cf %s'

- name: create .kube directory
  file:
    path: "/home/{{ SUDO_USER }}/.kube"
    state: directory
    mode: 0755
    owner: "{{ SUDO_USER }}"

- name: swap off
  shell: swapoff -a
